{"version":3,"sources":["Bag.js","Devices.js","App.js","reportWebVitals.js","index.js"],"names":["Bag","className","React","Component","Devices","this","props","stateVars","loaded","items","map","item","index","src","image","standard","alt","display_title","onClick","prev","next","App","state","offset","getDevices","url","baseUrl","fetch","then","response","json","data","setState","prevPage","nextPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAGMA,E,4JACJ,WACE,OACE,qBAAKC,UAAY,kB,GAHLC,IAAMC,WAQTH,ICITI,G,kKACJ,WACE,OAAKC,KAAKC,MAAMC,UAAUC,OAI1B,sBAAKP,UAAU,eAAf,UACA,qBAAKA,UAAU,cAAf,SAEGI,KAAKC,MAAMC,UAAUE,MAAMC,KAAI,SAACC,EAAMC,GAAP,OAC9B,gCACA,qBAAKX,UAAU,mBAAf,SACA,qBAAKA,UAAU,eACbY,IAAMF,EAAKG,MAAMC,SACjBC,IAAI,OAGN,qBAAKf,UAAU,cAAf,SACGU,EAAKM,kBARKL,QAajB,wBAAQM,QAAWb,KAAKC,MAAMa,KAA9B,oBACA,wBAAQD,QAAWb,KAAKC,MAAMc,KAA9B,uBAtByC,8BACvC,0D,GAHgBlB,IAAMC,YA6BbC,ICQAiB,E,kDA9Cb,WAAYf,GAAQ,IAAD,8BACjB,cAAMA,IACDgB,MAAQ,CACXb,MAAO,GACPD,QAAQ,EACRe,OAAQ,GALO,E,qDASnB,WACElB,KAAKmB,e,wBAGP,WAAc,IAAD,OAELC,EAAMC,wDAAuBrB,KAAKiB,MAAMC,OAAS,YACvDI,MAAMF,GACHG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAACvB,MAAOsB,EAAMvB,QAAQ,S,sBAGtD,WACEH,KAAK2B,SAAS,CAACT,OAAQlB,KAAKiB,MAAMC,OAAS,KAC3ClB,KAAKmB,e,sBAGP,WACEnB,KAAK2B,SAAS,CAACT,OAAQlB,KAAKiB,MAAMC,OAAS,KAC3ClB,KAAKmB,e,oBAGP,WAAU,IAAD,OACT,OACE,gCACA,cAAC,EAAD,CACEjB,UAAWF,KAAKiB,MAChBH,KAAM,kBAAM,EAAKc,YACjBb,KAAM,kBAAM,EAAKc,cAEnB,cAAC,EAAD,W,GAxCchC,IAAMC,WCOTgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e0f1cbf1.chunk.js","sourcesContent":["import React from 'react';\nimport './Bag.css';\n\nclass Bag extends React.Component {\n  render() {\n    return(\n      <div className = \"Bag-panel\">\n      </div>\n    );\n}\n}\nexport default Bag;\n\n\n","import React from 'react';\nimport './Devices.css';\n// import { useEffect, useState } from 'react';\n\n/*\nexport default function deviceLoad(pageNumber){\n  useEffect(() => {\n    const baseURL = 'https://www.ifixit.com/api/2.0/wikis/CATEGORY';\n    const url = baseURL + '?offset=' + this.state.offset + '&limit=13';\n    fetch(url)\n      .then(response => response.json())\n      .then(data => this.setState({items: data, loaded: true}));\n  })\n}*/\n\nclass Devices extends React.Component {\n  render() {\n    if (!this.props.stateVars.loaded) return <div>\n      <h1> Items loading... </h1> \n    </div> ;\n    return(\n    <div className='Device-panel'>\n    <div className='Device-grid'>\n    \n      {this.props.stateVars.items.map((item, index) => (\n        <div key = { index }>\n        <div className='Device-container'>\n        <img className='Device-image'\n          src ={item.image.standard} \n          alt=\"\"\n        />\n        </div>\n        <div className='Device-text'>\n          {item.display_title}\n        </div>\n        </div>\n      ))}\n    </div>\n    <button onClick = {this.props.prev}> prev </button>\n    <button onClick = {this.props.next}> next </button>\n    </div>\n  );\n}\n}\nexport default Devices;\n\n\n","import React from 'react';\nimport './App.css';\nimport Bag from './Bag';\nimport Devices from './Devices.js'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      loaded: false,\n      offset: 0\n    };\n  }\n \n  componentDidMount() {\n    this.getDevices();\n  }\n\n  getDevices() {\n    const baseUrl = 'https://www.ifixit.com/api/2.0/wikis/CATEGORY';\n    const url = baseUrl + '?offset=' + this.state.offset + '&limit=12';\n    fetch(url)\n      .then(response => response.json())\n      .then(data => this.setState({items: data, loaded: true}));\n  }\n\n  nextPage(){\n    this.setState({offset: this.state.offset + 12});\n    this.getDevices();\n  }\n\n  prevPage(){\n    this.setState({offset: this.state.offset - 12});\n    this.getDevices();\n  }\n  \n  render() {\n  return (\n    <div>\n    <Devices\n      stateVars={this.state}\n      prev={() => this.prevPage()}\n      next={() => this.nextPage()}\n      />\n    <Bag\n      \n    />\n    </div>\n  )\n}\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}